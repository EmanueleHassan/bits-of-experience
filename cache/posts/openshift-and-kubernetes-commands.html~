<br>
<br>

<p>
This post outlines some of the commands to operate on your Kubernetes
and Openshift cluster via CLI.
</p>

<br>

<div id="outline-container-orgba324ac" class="outline-2">
<h2 id="orgba324ac">Kubernetes</h2>
<div class="outline-text-2" id="text-orgba324ac">
<p>
Particularly useful when working with Kubernetes is the dashboard. It
provides you a neat overview over your cluster. It allows to view and
edit single <code>.yaml</code> files for each resource. 
</p>

<p>
It is a powerful way to navigate your way through and get the
structure. You can access it from the ibm cloud on your browser directly. INC4429361
</p>
</div>


<div id="outline-container-org735ceae" class="outline-3">
<h3 id="org735ceae">Configure your Kubeconfig file</h3>
<div class="outline-text-3" id="text-org735ceae">
<p>
This is the foremost important step as you have to specify the
kubernetes/openshift cluster you want to operate on.
</p>

<p>
Kubectl is a command line tool for controlling Kubernetes
clusters. 
</p>

<p>
kubectl looks for a file named config in the $HOME/.kube
directory. You can specify other kubeconfig files by setting the
KUBECONFIG environment variable or by setting the &#x2013;kubeconfig
flag. 
</p>

<p>
In this sense you can look up for instance the various clusters
running on your IBM cloud by running
</p>

<div class="highlight"><pre><span></span>    ibmcloud ks cluster ls
</pre></div>

<p>
You can then withdraw the specific configuration settings for a
cluster by running
</p>

<div class="highlight"><pre><span></span>    ibmcloud ks cluster config &lt;cluster-ID&gt;
</pre></div>

<p>
Finally you can export it and configuring the KUBECONFIG file by running.
</p>

<div class="highlight"><pre><span></span>    <span class="nb">export</span> <span class="nv">KUBECONFIG</span><span class="o">=</span>/Users/marcohassan/.bluemix/plugins/container-service/clusters/&lt;cluster-id&gt;/&lt;configuration .yaml&gt;
</pre></div>
</div>
</div>

<div id="outline-container-org0743a7a" class="outline-3">
<h3 id="org0743a7a">General Clutster Info</h3>
<div class="outline-text-3" id="text-org0743a7a">
<div class="highlight"><pre><span></span>    kubectl cluster-info
</pre></div>
</div>
</div>

<div id="outline-container-orgad89c6d" class="outline-3">
<h3 id="orgad89c6d">Look at the running pods and Namespaces</h3>
<div class="outline-text-3" id="text-orgad89c6d">
<p>
In a similar way to Openshift; you can operate on your IKS cluster
using the <code>kubectl</code> command. The important thing is that you properly
configured and exported the <code>KUBECONFIG</code> yaml with the necessary
information on the cluster you wish to operate in the first place.
</p>

<div class="highlight"><pre><span></span>    kubectl get pods

    kubectl get namespaces 
</pre></div>

<p>
In contrast to Openshift there is not a single command to change namespace
in Kubernetes.
</p>

<p>
In order to do that you can follow the steps under the following post: <a href="https://suraj.io/post/changing-k8s-ns/">link</a>.
</p>
</div>
</div>

<div id="outline-container-orgeaaffa3" class="outline-3">
<h3 id="orgeaaffa3">Apply changes to resource</h3>
<div class="outline-text-3" id="text-orgeaaffa3">
<p>
With the <code>kubectl apply</code> command you are actually changing some
<code>.yaml</code> file of your images. 
</p>

<p>
This is for instance useful when you don't want to validate the
input before sending it.
</p>

<div class="highlight"><pre><span></span>    kubectl apply --validate<span class="o">=</span><span class="nb">false</span> -f https://github.com/jetstack/cert-manager/releases/download/v0.10.0/cert-manager-openshift.yaml 
</pre></div>
</div>
</div>


<div id="outline-container-org1631163" class="outline-3">
<h3 id="org1631163">Gather more info for dealing with specific errors.</h3>
<div class="outline-text-3" id="text-org1631163">
<div class="highlight"><pre><span></span>    kubectl describe pod &lt;my-pod&gt;
</pre></div>

<p>
This is for instance helpful when dealing with
CrashloopBackOff. This happens when you have a pod starting,
crashing, starting again, and then crashing again. 
</p>

<p>
A quick Google search will show us that crash loop events can happen
for a number of different reasons (and they happen frequently). Here
are some of the umbrella causes for why they occur:
</p>

<p>
The application inside the container keeps crashing Some type of
parameters of the pod or container have been configured incorrectly An
error has been made when deploying Kubernetes
</p>

<p>
Doing a kubectl describe pod will give you more information on that
pod. 
</p>

<p>
There you can read the specific error code - for instance in a
case of mine -  a <code>255 error</code>, which means that there likely is a
file specification error and this could not be found.
</p>
</div>
</div>

<div id="outline-container-orgf74f60e" class="outline-3">
<h3 id="orgf74f60e">When disrupting the Kubernetes Backend</h3>
<div class="outline-text-3" id="text-orgf74f60e">
<p>
It happened to me, when trying to debug Kubernetes issues that
I somehow altered the kubernetes structure and got the following error.
</p>

<pre class="example">
Error: could not get apiVersions from Kubernetes: unable to retrieve
the complete list of server APIs:
admission.certmanager.k8s.io/v1beta1: the server is currently unable
to handle the request
</pre>

<p>
This turned out to be the case when the api-services no longer have backends running.
</p>

<p>
To fix it I run:
</p>

<div class="highlight"><pre><span></span>    kubectl get apiservice
</pre></div>

<p>
This will list the kubernetes api services of your cluster and
issues arises for ones where the AVAILABLE entry is False.
</p>

<p>
If you don't need those APIs any more, delete them:
</p>

<div class="highlight"><pre><span></span>    kubectl delete apiservce &lt;service-name&gt;
</pre></div>

<p>
You should be back to a normal behaving cluster then.
</p>

<br>
</div>
</div>
</div>

<div id="outline-container-org7623973" class="outline-2">
<h2 id="org7623973">Openshift</h2>
<div class="outline-text-2" id="text-org7623973">
<p>
Openshift is also a cluster management tool. This is a more well
rounded management tool. Especially in monitoring the cluster and
creating new services and resources it is particularly strong. 
</p>

<p>
The GUI interface is very well done and comprehensive. This section
looks at the CLI to directly operate on your openshift
cluster. Here is important to configure your cluster as previously
noted in the kubernetes section. The KUBECONFIG of your openshift
cluster will allow you to directly operate on your cluster.
</p>

<p>
Commands are pretty similar to Kubernetes CLI.
</p>
</div>

<div id="outline-container-org556b536" class="outline-3">
<h3 id="org556b536">General glimpse of Cluster</h3>
<div class="outline-text-3" id="text-org556b536">
<p>
Look at the general settings of your cluster 
</p>

<div class="highlight"><pre><span></span>    oc config view
</pre></div>

<p>
In order to list the current namespaces or pods make use of
</p>
</div>
</div>

<div id="outline-container-org712b2c7" class="outline-3">
<h3 id="org712b2c7">Look at namespaces and pods</h3>
<div class="outline-text-3" id="text-org712b2c7">
<div class="highlight"><pre><span></span>    oc get pods

    oc get namespace
</pre></div>
</div>
</div>

<div id="outline-container-orge5681a2" class="outline-3">
<h3 id="orge5681a2">Get satatus of running pods</h3>
<div class="outline-text-3" id="text-orge5681a2">
<div class="highlight"><pre><span></span>     oc status
</pre></div>
</div>
</div>

<div id="outline-container-org7afb575" class="outline-3">
<h3 id="org7afb575">Look at specific pod configuration</h3>
<div class="outline-text-3" id="text-org7afb575">
<div class="highlight"><pre><span></span>    oc edit pod &lt;pod-name&gt;
</pre></div>
</div>
</div>

<div id="outline-container-orgd9dcd7d" class="outline-3">
<h3 id="orgd9dcd7d">Switch among namespaces</h3>
<div class="outline-text-3" id="text-orgd9dcd7d">
<p>
To switch between different namespaces use
</p>

<div class="highlight"><pre><span></span>     oc project &lt;namespace&gt;
</pre></div>

<p>
Look at the user configuration in the <code>kube config</code> file.
</p>

<div class="highlight"><pre><span></span>     oc get users
</pre></div>
</div>
</div>
</div>
