<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bits of Experience</title><link>https://marcohassan.github.io/bits-of-experience/</link><description>A readable view on my studying adventures.</description><atom:link href="https://marcohassan.github.io/bits-of-experience/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:marco.hassan30@gmail.com"&gt;Marco Hassan&lt;/a&gt; </copyright><lastBuildDate>Wed, 20 Apr 2022 16:52:04 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Asynchronous Schema in Python</title><link>https://marcohassan.github.io/bits-of-experience/posts/asynchronous-schema-in-python/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
This post briefly summarizes the learnings from this &lt;a href="https://realpython.com/python-async-features/#reader-comments"&gt;other post&lt;/a&gt;. Read
it if you have time before reading this, as I intend to keep this
quite short and juicy.  
&lt;/p&gt;

&lt;p&gt;
I really liked that post, it did give me some overview of some new
methods in python I was not aware of.
&lt;/p&gt;

&lt;p&gt;
Get familiar with the terms in the article. Albeit these article are
101, the terms are pretty much in line with the wider literature.
&lt;/p&gt;

&lt;p&gt;
Note that this post sum-up is basically about asynchronous programming
via &lt;a href="https://en.wikipedia.org/wiki/Cooperative_multitasking"&gt;cooperative multitasking&lt;/a&gt;. This is in contrast to &lt;a href="https://www.techtarget.com/whatis/definition/preemptive-multitasking#:~:text=Preemptive%20multitasking%20is%20task%20in,another%20task%20is%20called%20preempting."&gt;preemptive
multitasking&lt;/a&gt; which is used by OS-level threading mechanism as done via
the &lt;a href="https://marcohassan.github.io/bits-of-experience/posts/on-multithreading/"&gt;Threading&lt;/a&gt; module in Python.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/asynchronous-schema-in-python/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Python</category><category>software-engineering</category><guid>https://marcohassan.github.io/bits-of-experience/posts/asynchronous-schema-in-python/</guid><pubDate>Mon, 18 Apr 2022 06:58:20 GMT</pubDate></item><item><title>Proper REST API</title><link>https://marcohassan.github.io/bits-of-experience/posts/proper-rest-api/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So starting to dig a little bit deeper into the way to properly write
your APIs.
&lt;/p&gt;

&lt;p&gt;
After the OpenAPI specifications and the integration with Swagger,
there is the component of hypermedia.
&lt;/p&gt;

&lt;p&gt;
I like this added layer as it will allow you to very solidly program
your APIs and produce and consume them in a very programmatic way.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/proper-rest-api/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://marcohassan.github.io/bits-of-experience/posts/proper-rest-api/</guid><pubDate>Fri, 15 Apr 2022 17:29:19 GMT</pubDate></item><item><title>On Multithreading</title><link>https://marcohassan.github.io/bits-of-experience/posts/on-multithreading/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So apparently this is a thing that I will have to master sooner or
later.
&lt;/p&gt;

&lt;p&gt;
I am not a fun of it as I know it gets tricky to write solid programs
with mulit-threading when complexity increases.
&lt;/p&gt;

&lt;p&gt;
For a solution that I am trying to construct I will need that bit.
&lt;/p&gt;

&lt;p&gt;
This for two reasons:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;the existing solution uses it; meaning that it is beneficial for
you to read and understand it in order for understand the current
design and borrow from it.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
your new solution would either have flavours of it or use queues. I
am rather inclined for the second but I promised to provide a
solution for both and this is what I am currently working for.
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;Update:&lt;/i&gt; after one day I could set up a working solution with
multithreading. Was not too difficult. But it is just at conceptual
level. The gist of it is more less along &lt;a href="https://alyssaq.github.io/2014/how-do-I-return-a-http-response-to-caller-and-continue-processing/"&gt;these&lt;/a&gt; lines.
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
I am not an extremely low level programmer due to my background. At
least not so far. So this is the reason I do not conceptually like the
thing and would prefer to go with a much more simple queueing
solution.
&lt;/p&gt;

&lt;p&gt;
I learned in life that you should not stop in front of your conceptual
barriers. You should be aware of your gaps and taking extra care when
making a step in that direction so that you do not hurt yourself, but
by baby steps everything is possible. This is how we learn since
inception.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/on-multithreading/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://marcohassan.github.io/bits-of-experience/posts/on-multithreading/</guid><pubDate>Wed, 13 Apr 2022 14:47:16 GMT</pubDate></item><item><title>Solvency II</title><link>https://marcohassan.github.io/bits-of-experience/posts/solvency-ii/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;style&gt;

img {
display: block;
margin-top: 60px;
margin-bottom: 60px;
margin-left: auto;
margin-right: auto;
width: 70%;
height: 100%;
class: center;
}

.container {
  position: relative;
  left: 15%;
  margin-top: 60px;
  margin-bottom: 60px;
  width: 70%;
  overflow: hidden;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  display:block;
  overflow-y: hidden;
}

.responsive-iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
  display:block;
  overflow-y: hidden;
}
&lt;/style&gt;

&lt;p&gt;
So after SST now the turn of Solvency II - the EU framework for
risk regulation of insurance companies.
&lt;/p&gt;

&lt;p&gt;
This will be important at the job as you need as well that framework
in order to compute the regulatory capital of the EU-based units.
&lt;/p&gt;

&lt;p&gt;
On the top of it, it will be a good exercise to see SST in
perspective. It will also be good in order to understand what is
different between the two frameworks and possibly to better understand
how SST integrates with it and is compatible as claimed in the SST
whitepaper - with the argumentation that there should be a high degree
of compatibility, otherwise you can well imagine how one insurance
operating in one country would get a competitive advantage over the
other.
&lt;/p&gt;

&lt;p&gt;
Note as well that you have as well to understand better which
framework does apply where, when you start to have these weird
cross-border nested legal entities and relations. This will be
material of a different post.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/solvency-ii/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>finance</category><category>insurance</category><guid>https://marcohassan.github.io/bits-of-experience/posts/solvency-ii/</guid><pubDate>Sun, 10 Apr 2022 15:17:09 GMT</pubDate></item><item><title>SST</title><link>https://marcohassan.github.io/bits-of-experience/posts/sst/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;style&gt;

img {
display: block;
margin-top: 60px;
margin-bottom: 60px;
margin-left: auto;
margin-right: auto;
width: 70%;
height: 100%;
class: center;
}

.container {
  position: relative;
  left: 15%;
  margin-top: 60px;
  margin-bottom: 60px;
  width: 70%;
  overflow: hidden;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  display:block;
  overflow-y: hidden;
}

.responsive-iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
  display:block;
  overflow-y: hidden;
}
&lt;/style&gt;

&lt;p&gt;
So time to learn a bit of SST and the concepts in this dimension.
&lt;/p&gt;

&lt;p&gt;
As I am running the thing it will make sense to have a broad
understanding of the thing.
&lt;/p&gt;

&lt;p&gt;
It will give as well an understanding of some terms that you see going
around.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/sst/"&gt;Read more…&lt;/a&gt; (25 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>finance</category><category>insurance</category><guid>https://marcohassan.github.io/bits-of-experience/posts/sst/</guid><pubDate>Wed, 30 Mar 2022 15:38:15 GMT</pubDate></item><item><title>On some historic thoughts</title><link>https://marcohassan.github.io/bits-of-experience/posts/on-some-historic-thoughts/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So this is another personal post that is not related to the work.
&lt;/p&gt;

&lt;p&gt;
It's Saturday today. Finally I had no plans for the day so that I am
taking the day to relax and reading a bit.
&lt;/p&gt;

&lt;p&gt;
It is a nice activity as it enriches the soul and broadens the
horizons.
&lt;/p&gt;

&lt;p&gt;
Today I took a book out of the shelves: &lt;i&gt;Secondhand Time: The Last of
the Soviets&lt;/i&gt; by &lt;a href="https://en.wikipedia.org/wiki/Svetlana_Alexievich"&gt;Svetlana Aleksievich&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/on-some-historic-thoughts/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>perRep</category><guid>https://marcohassan.github.io/bits-of-experience/posts/on-some-historic-thoughts/</guid><pubDate>Sat, 26 Mar 2022 14:35:27 GMT</pubDate></item><item><title>Azure Storage</title><link>https://marcohassan.github.io/bits-of-experience/posts/azure-storage/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So quickly understand how to work with storage in Azure.
&lt;/p&gt;

&lt;p&gt;
Understand there is a clear split between storage and databases.
&lt;/p&gt;

&lt;p&gt;
You manage all of the files via storage accounts.
&lt;/p&gt;

&lt;p&gt;
This post explores the way to set up and use everything properly in
Azure.
&lt;/p&gt;

&lt;p&gt;
It will be also of paramount importance as just upon a clear
understanding of the specifics of the microsoft storage service you
will be able to properly understand and use the azure SDK. Meaning you
will have no difficulty in understanding for instance when to use a
&lt;code&gt;BlobContainerClientBuilder&lt;/code&gt; or a &lt;code&gt;BlobContainerBuilder&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
In general you can find the java SDK for java &lt;a href="https://docs.microsoft.com/en-us/java/api/com.azure.storage.blob.blobcontainerclient?view=azure-java-stable"&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/azure-storage/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>azure</category><guid>https://marcohassan.github.io/bits-of-experience/posts/azure-storage/</guid><pubDate>Thu, 24 Mar 2022 14:13:24 GMT</pubDate></item><item><title>Azure Pipelines</title><link>https://marcohassan.github.io/bits-of-experience/posts/azure-pipelines/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;style&gt;
img {
display: block;
margin-top: 60px;
margin-bottom: 60px;
margin-left: auto;
margin-right: auto;
width: 70%;
height: 100%;
class: center;
}

.container {
  position: relative;
  left: 15%;
  margin-top: 60px;
  margin-bottom: 60px;
  width: 70%;
  overflow: hidden;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  display:block;
  overflow-y: hidden;
}

.responsive-iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
  display:block;
  overflow-y: hidden;
}
&lt;/style&gt;

&lt;p&gt;
So write here a bit of documentation about how to create your DevOps
pipelines.
&lt;/p&gt;

&lt;p&gt;
That will be important as in such a way you can finally abstract from
the lower level stuff.
&lt;/p&gt;

&lt;p&gt;
You just deployed your first webapps on Azure. You did that through a
single gradle command through the gradle plug in.
&lt;/p&gt;

&lt;p&gt;
So in this sense it is easy now to deploy your changes via such
pipelines. You can embedd this over there as a task theoretically.
&lt;/p&gt;

&lt;p&gt;
Other people are taking the lead in this dimension and know much
better how to set up proper env integrated with Jira or similar
boards, so will not spend too much time with it.
&lt;/p&gt;

&lt;p&gt;
This is not interesting to this stage for me. It is just a small test
in order to read pipelines and understand properly what is going on
over there such that you can understand the general workflow.
&lt;/p&gt;

&lt;p&gt;
Note that obviously all of the notes under this page stems directly
from the official Microsoft documentation.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/azure-pipelines/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>azure</category><category>software-engineering</category><guid>https://marcohassan.github.io/bits-of-experience/posts/azure-pipelines/</guid><pubDate>Wed, 23 Mar 2022 12:02:43 GMT</pubDate></item><item><title>Deploying Webapps in Azure</title><link>https://marcohassan.github.io/bits-of-experience/posts/deploying-spring-webapps-in-azure/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So starting to make a little bit of order and starting to deploy
directly to Azure.
&lt;/p&gt;

&lt;p&gt;
That is nothing fancy at all. Just basics stuff. With it you can start
to properly experiment in your Sandbox. 
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/deploying-spring-webapps-in-azure/"&gt;Read more…&lt;/a&gt; (11 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>azure</category><category>java</category><category>Pyhton</category><category>software-engineering</category><guid>https://marcohassan.github.io/bits-of-experience/posts/deploying-spring-webapps-in-azure/</guid><pubDate>Mon, 21 Mar 2022 15:34:55 GMT</pubDate></item><item><title>Macro Variables</title><link>https://marcohassan.github.io/bits-of-experience/posts/macro-variables/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So here some notes about the macro side of the coin.
&lt;/p&gt;

&lt;p&gt;
I started reading the &lt;a href="https://www.zurich.com/en/economics-and-markets/publications"&gt;weekly publications&lt;/a&gt; of the macro-group of
Zurich.
&lt;/p&gt;

&lt;p&gt;
I must say that it is interesting. I always loved macro.
&lt;/p&gt;

&lt;p&gt;
I always recall the book of Blanchard. I think that this was the most
intersting theories I read throughout my academic life. Stat is
nice.. but way too much low level that higher world modeling dimension
is missing.
&lt;/p&gt;

&lt;p&gt;
I mean think Black-Scholes. That is also fun if I think about it now
again. A simple mathematical formula - confusing tons of
practitioners - through that stat low level stuff moving trillions of
dollars which is then ultimately resulting from very questionable
first-order assumptions.
&lt;/p&gt;

&lt;p&gt;
Sometimes I am fascinated about how this world sticks together and is
not simply falling apart. 
&lt;/p&gt;

&lt;p&gt;
Anyways, back to Macroeconomics, at some point I thought that my life
was gonna be around it. &lt;i&gt;Kaynes vs. Hayek&lt;/i&gt; in an endless pointless
fight.
&lt;/p&gt;

&lt;p&gt;
I think that there is an inherent beauty in observing that
macro-picture making guesses about how the dots are connected.
&lt;/p&gt;

&lt;p&gt;
Speculating on the reaction of CB etc. lovely. At the end they all
follow the common principles. Until the "business" does not require a
big shift.
&lt;/p&gt;

&lt;p&gt;
In any case here the list - which I guess will keep expanding in the
coming years.
&lt;/p&gt;

&lt;p&gt;
It is important to understand all of these different components as if
you will stay for a long time in the industry and you will manage to
navigate data quickly some interesting patterns might start to emerge.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/macro-variables/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>finance</category><category>macroeconomics</category><guid>https://marcohassan.github.io/bits-of-experience/posts/macro-variables/</guid><pubDate>Tue, 08 Mar 2022 15:16:45 GMT</pubDate></item></channel></rss>