<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bits of Experience</title><link>https://marcohassan.github.io/bits-of-experience/</link><description>A readable view on my studying adventures.</description><atom:link href="https://marcohassan.github.io/bits-of-experience/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:marco.hassan30@gmail.com"&gt;Marco Hassan&lt;/a&gt; </copyright><lastBuildDate>Fri, 27 Aug 2021 07:59:21 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>On Python Structures - Understand it to understand how to properly organize your Projects</title><link>https://marcohassan.github.io/bits-of-experience/posts/on-python-structures-understand-it-to-understand-how-to-properly-organize-your-projects/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So I finally took some time to go over the documentation and make some
notes about the different naming conventions and some basics
structures you should get when building larger projects.
&lt;/p&gt;

&lt;p&gt;
I just finished a third larger python project and I am by now
conscious of the strength of well organized code. It can save you a
very big amount of time, especially when your projects start to grow
very large and it becomes difficult to keep a clean mental structure
over the code-base.
&lt;/p&gt;

&lt;p&gt;
I therefore started to write a couple of posts where I am writing and
will update my way of working and structuring projects. I will expand
on it in time once my knowledge will expand and more sophistication
will occur.
&lt;/p&gt;

&lt;p&gt;
This particular posts deals with the basics structures that you have
to understand to properly set up projects and manage to well deal with
larger code-bases. 
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/on-python-structures-understand-it-to-understand-how-to-properly-organize-your-projects/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Python</category><guid>https://marcohassan.github.io/bits-of-experience/posts/on-python-structures-understand-it-to-understand-how-to-properly-organize-your-projects/</guid><pubDate>Wed, 07 Jul 2021 08:50:22 GMT</pubDate></item><item><title>Book Review - Il Confine del Futuro</title><link>https://marcohassan.github.io/bits-of-experience/posts/book-review-il-confine-del-futuro/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So I recently finished the books I was reading. I was out of books
and did not want to go buy some in a book-shop; here they mostly
sell books in German and I rather prefer to read books in
English…
&lt;/p&gt;

&lt;p&gt;
So I started to search in my room where I found the book - Il
Confine del Futuro - a book by an IBM Research Scientist about
Artificial Intelligence my family gave me about 2 years ago; when
they got that I was interested in the subject.
&lt;/p&gt;

&lt;p&gt;
It was nice of them - I even found some writings wishing me good
luck for the new adventure - each in his personal way reflecting
the character… Was nice and fun to read them.
&lt;/p&gt;

&lt;p&gt;
Anyways… I did not read it at first… the title sounded too
vague. The classical book leveraging the buzz, trying to outline and
solve questions for which there is no answer.
&lt;/p&gt;

&lt;p&gt;
Being the left-over I started to read it and in two evenings I was
over with it. It is quite some lite book that you can go over
quickly. Here my sum-up.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/book-review-il-confine-del-futuro/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://marcohassan.github.io/bits-of-experience/posts/book-review-il-confine-del-futuro/</guid><pubDate>Mon, 05 Jul 2021 12:34:21 GMT</pubDate></item><item><title>A brief Post on Smth Nice</title><link>https://marcohassan.github.io/bits-of-experience/posts/a-brief-post-on-smth-nice/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So I was working - of course with a bit of music. Those who know me
well know that I cannot work in the silence. I never did that, even
when studying highly theoretical material I must feel my blood flowing
and set my mind free. Just then I can enter my working mood properly.
&lt;/p&gt;

&lt;p&gt;
So this time I was listening to &lt;a href="https://www.youtube.com/watch?v=iWOyfLBYtuU&amp;amp;list=RDMMxWx3R7WaAQY&amp;amp;index=28"&gt;this song&lt;/a&gt; and something beautiful
occurred. 
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/a-brief-post-on-smth-nice/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>perRep</category><guid>https://marcohassan.github.io/bits-of-experience/posts/a-brief-post-on-smth-nice/</guid><pubDate>Fri, 02 Jul 2021 13:53:14 GMT</pubDate></item><item><title>Python - My Projects Strucuture</title><link>https://marcohassan.github.io/bits-of-experience/posts/python-my-projects-strucuture/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
Here are some notes about how to set up a project.
&lt;/p&gt;

&lt;p&gt;
I will use this strucuture in the following projects I will have to
do.
&lt;/p&gt;

&lt;p&gt;
For the last project I set up the project from scratch and I think
that I finally found my way to structure Python Projects in the right
way.
&lt;/p&gt;

&lt;p&gt;
Right way - this means - a way that satisfies the following properties:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;It is modular. This is extremely important. If you manage to work in
a modular way by clearly separating logical structures you might use
some of these structures for further projects you will work on.&lt;/li&gt;

&lt;li&gt;It is portable - by the very same argument explained above.&lt;/li&gt;

&lt;li&gt;It is minimal - no double effort&lt;/li&gt;

&lt;li&gt;It has strong logic - i.e. it is clear what modules and sub-modules
represent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
I will go into structure and some examples of how to reach such
components next.
&lt;/p&gt;

&lt;p&gt;
Note again that this is my second larger project where starting from a
green field I could set everything up. You might want to change and
expand on this structure in following projects.
&lt;/p&gt;

&lt;p&gt;
Please, do so and do not forget to expand on that.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/python-my-projects-strucuture/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Python</category><guid>https://marcohassan.github.io/bits-of-experience/posts/python-my-projects-strucuture/</guid><pubDate>Thu, 01 Jul 2021 14:03:15 GMT</pubDate></item><item><title>Refactoring - Ediffing and Merging</title><link>https://marcohassan.github.io/bits-of-experience/posts/refactoring-ediffing-and-merging/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;style&gt;
.container {
  position: relative;
  left: 15%;
  margin-top: 60px;
  margin-bottom: 60px;
  width: 70%;
  overflow: hidden;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  display:block;
  overflow-y: hidden;
}

.responsive-iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
  display:block;
  overflow-y: hidden;
}
&lt;/style&gt;

&lt;p&gt;
So recently I had to do quite some big refactoring and merging for
some code base.
&lt;/p&gt;

&lt;p&gt;
I knew about emacs &lt;code&gt;ediffing&lt;/code&gt; packages that I used already a couple
of times in the past. It is just a little bit confusing at the
beginning as it is often the case with emacs, you might well be
overwhelmed at the beginning. Too many nice features and you might
quickly get lost in it.
&lt;/p&gt;

&lt;p&gt;
The below video should give you a quick introduction to ediffing in
emacs. It is just a very basic tutorial. Then to get more detailed
information you should check at the &lt;a href="https://www.gnu.org/software/emacs/manual/html_mono/ediff.html"&gt;official documentation&lt;/a&gt; (at the
quick help commands section) telling you about all of the different
commands that are quite a few.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/refactoring-ediffing-and-merging/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><guid>https://marcohassan.github.io/bits-of-experience/posts/refactoring-ediffing-and-merging/</guid><pubDate>Fri, 25 Jun 2021 13:48:17 GMT</pubDate></item><item><title>Flask Login vs Flask Auth</title><link>https://marcohassan.github.io/bits-of-experience/posts/flask-login-vs-flask-auth/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So again this is nothing but a quick lesson to keep this big
understanding of the IT systems landscape. That is once more not my
bread and butter. At least so far so also look around as you might
find better sources explaining such content.
&lt;/p&gt;

&lt;p&gt;
I am starting to cumulate quite some experience in flask. Ultimately I
had to do quite some project on the backend side for a project.
&lt;/p&gt;

&lt;p&gt;
The point came when I had to secure the a webapp I am working
on. As it is an experimental project with low budget I have to perform
multiple tasks. I.e. I developed the data solution and data model. I
implemented the database and have now to make it speak with the
front-end component. 
&lt;/p&gt;

&lt;p&gt;
There is an important difference to understand in the way you can
operate with flask and depending on the application type you should
use the one or the other method for securing your application.
&lt;/p&gt;

&lt;p&gt;
This is directly related to the &lt;a href="https://build.vsupalov.com/how-backend-and-frontend-communicate/"&gt;different types of web-architectures&lt;/a&gt;
you can use to structure your front-end. I will briefly go over these
next. It will make you to make sense of everything.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/flask-login-vs-flask-auth/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>flask</category><category>webapps</category><guid>https://marcohassan.github.io/bits-of-experience/posts/flask-login-vs-flask-auth/</guid><pubDate>Wed, 23 Jun 2021 14:27:50 GMT</pubDate></item><item><title>Defining Functions in Spark</title><link>https://marcohassan.github.io/bits-of-experience/posts/defining-functions-in-spark/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
One especially interesting feature that I already used before; but
unfortunately I did not make notes for, is the possibility of
specifying particular functions via the PySpark raw API and make them
available throughout your spark session when working via data-frames -
be it via SparkSQL or via pandas.
&lt;/p&gt;

&lt;p&gt;
Note that this notes are based on &lt;a href="https://jaceklaskowski.gitbooks.io/mastering-spark-sql/content/spark-sql-udfs.html"&gt;this source&lt;/a&gt;. Looks like a very
exhaustive source. So check at it again should this project really
start. There you might make sense of all of that. 
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/defining-functions-in-spark/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Spark</category><guid>https://marcohassan.github.io/bits-of-experience/posts/defining-functions-in-spark/</guid><pubDate>Thu, 03 Jun 2021 12:34:46 GMT</pubDate></item><item><title>Helm</title><link>https://marcohassan.github.io/bits-of-experience/posts/helm/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
This are some notes on Helm.
&lt;/p&gt;

&lt;p&gt;
Recently I have downloaded a chart. I will have to change the
configurations of this.
&lt;/p&gt;

&lt;p&gt;
I will have to configure static IP for the internal application
running in kubernetes such that my service will be externally
accessible. 
&lt;/p&gt;

&lt;p&gt;
Here some notes based on that and some commands.
&lt;/p&gt;

&lt;p&gt;
I will expand on this in the future depending how much I will have to
work with it.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/helm/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Container Management</category><guid>https://marcohassan.github.io/bits-of-experience/posts/helm/</guid><pubDate>Thu, 27 May 2021 15:16:46 GMT</pubDate></item><item><title>General Notes on Data Lakes</title><link>https://marcohassan.github.io/bits-of-experience/posts/general-notes-on-data-lakes/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
Some general notes on data lakes. Sum up a bit the general decisions
in the data world.
&lt;/p&gt;

&lt;p&gt;
More interesting is the Zaloni approach discussed later in the notes.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/general-notes-on-data-lakes/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Data</category><guid>https://marcohassan.github.io/bits-of-experience/posts/general-notes-on-data-lakes/</guid><pubDate>Thu, 27 May 2021 14:57:36 GMT</pubDate></item><item><title>Istio</title><link>https://marcohassan.github.io/bits-of-experience/posts/istio/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
A quick intro to Istio and what that is.
&lt;/p&gt;

&lt;p&gt;
Expand in the future in case of need.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/istio/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Microservices</category><guid>https://marcohassan.github.io/bits-of-experience/posts/istio/</guid><pubDate>Thu, 27 May 2021 14:50:16 GMT</pubDate></item></channel></rss>