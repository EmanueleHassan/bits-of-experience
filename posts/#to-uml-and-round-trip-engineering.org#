#+BEGIN_COMMENT
.. title: To UML and Round-Trip-Engineering
.. slug: to-uml-and-round-trip-engineering
.. date: 2021-10-14 09:55:33 UTC+02:00
.. tags: uml, java, software-engineering
.. category: 
.. link: 
.. description: 
.. type: text

#+END_COMMENT


The more I work on this project, the more sure I get. You need a
proper way to document your code structure. To jump into the source
base is otherwise extremly hard for freshies like me. On the top of it
given the amount of packages we need to maintain and expand I highly
doubt that it is efficient to not have such documentation. The time it
costs to go back and understand the general structure of the project,
even for the lead developer of the project is simply to high.

On the top of it, even a relative fresher into OOP as me, could find
some fundamental holes and gaps in the program logic here and there in
the code base of a project. I must say that the developement of the
project is still ongoing, so I must check with the colleagues if they
are aware of such holes. In any case, I am pretty much sure that parts
of the fundamental holes result by a lack of high-level meta-overview
of the classes and interdependencies. If you are missing the macro at
some point the micro will reign and the micro is usually nasty. The
macro should lead your way of project understanding. The micro should
be just a modular low-level intervention dictated by the macro.

Recall this. And work in such a way, otherwise things will come to
hunt back to you and your peace in future. 

In this sense I started quickly to explore for a couple of hours some
UML tools and their integration with the eclipse IDE.

Here some notes. I hope that in this sense I will have a proper
workflow in this dimension in the next couple of months.

{{{TEASER_END}}}

* Current Situation

  So the current situation is the following:

  - for new projects you can create your UML class diagrams on the
    fly. it will help you to define the structure of your
    projects. And even if some round-trip-engineering would be cool
    and would save you a bit of time, it is not of first-order
    importance. 

  - for the many existing projects, you have to find a tool that
    parses the source code to UML class diagrams. Such overview is
    fundamental as it will allow you to increase the speed through
    which you can make sense of the projects. 

  - QUESTION: once you have the general UML class diagram for an
    existing project, how do you expand on it? I.e. you will have to
    find a tool that does not take the code-snapshot as an image
    data-format but that allows you the expansion on the top of it. I
    do not want to re-write such images into some tool where I could
    expand on.

  Of course the best way to work, would be to have a strong tool with
  round trip-engineering. The issue is that to this stage, I could not
  find a non-commercial version that easily integrates with
  Eclipse. Funny world... the entire world works thorugh these
  projects and such gaps still exists in the open-source
  communities. After all it is all business.

* UML Lab

  This is in fact the best and most solid tool that I could find. Look
  at [[https://www.uml-lab.com/en/uml-lab/videos/round-trip-engineering-ng-video/][this video]]. That would be exactly what you would aim at.

  Keep it in the back of your mind. Go and look at the costs at some
  later time-point. Maybe at some later time point you can make the
  point for it.

* PlantUMl

  Ok, this was so far my default go-to tool. You can work well with it
  for your green-field projects. It will be cumbersome at some point
  to keep an up-to-date documentation, if you work on shared projects
  as I highly doubt that other people will onboard on it.

  Keep it for your stuff.
  
* Visual Paradigm

  This is worth to explore at some later time point.

  There is a [[https://www.visual-paradigm.com/support/documents/vpuserguide/12/14/6008_windows2000n.html][solid documenation]]. And it seems that there are quite
  some functionalities you can explore.

  There is also a commercial version for it, so that this points to
  the fact that people working at it are probably serious in their
  intentions.

  The issue is that when I installed the portable version of the
  software and lunched the program I got some security warning from my
  OS and it seems that not too many people work with it.

  Given the high care there is on security in the financial
  institution I work at, I decided to let it be for the time
  being. This especially as I am not even sure that this would be th
  
* Eclipse UML Generator

  That would have been it. All of the major 




  
* TODO Have to understand how come that such space is so underdeveloped

  Given the benefit that it can bring I cannot really understand the
  situation and the fact that it takes more than two hours to find
  a convenient tool to perform such tasks that easily integrates with
  different IDEs. 

