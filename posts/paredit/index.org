#+BEGIN_COMMENT
.. title: Paredit
.. slug: paredit
.. date: 2019-08-17 18:21:43 UTC+02:00
.. tags: emacs, parenthesis
.. category: 
.. link: 
.. description: 
.. type: text

#+END_COMMENT


#+BEGIN_HTML
<br>
<br>
#+END_HTML

Paredit is a nice tool to quickly deal with parenthesis when
coding. Thorough simple commands it lets you easily edit content
wrapped in parenthesis, move quickly the parenthesis themselves 

{{{TEASER_END}}}

General reference for =paredit= check the following [[http://pub.gajendra.net/src/paredit-refcard.pdf][paredit_cheat_sheet]].

** Simple opening and killing.


   When /Paredit/ is active, the usual delete and kill line commands
   of emacs are wrapped.
   
   With /Paredit/ =C-d= will cancel all of the content embedded in a
   frame (be it parenthesis or quotes) but will not delete the frame
   itself. Just once the text for the entire frame is empty so that
   you will have for instance an =()=  you will be able to delete the
   frame (in the example the parenthesis).

   In a similar fashion the kill line command =C-k= will not kill the
   entire line when /Paredit/ is active but when in a frame it will
   kill the entire content embedded in the frame.

   Moreover using =M-\"= will automatically wrap the word with double
   quotes. Highlight multiple words if you want to quote multiple
   words. The similar principle holds for commenting out text (use
   =M-;=) and for parenthesis =M-\(= Same hods for parenthesis.

   For deleting a parenthesis or quote or a quote use =M-s=.  This is
   an example (create this | first). Use M-s where the | is and you
   will get: create this first.

** Slurping and Burfing

   Moreover it is possible to move parenthesis among words. You can
   either include the next word wrt to the frame in normal brackets
   using =C- )= or the word before the frame using =C-\(= where the
   escape is to escape the paredit influence here.

   The above is called slurping and when using the same commands with
   curly brackets you obtain analogous results and the operation is then
   called burfing.

** Move across parenthesis
   Moreover it is possible to quickly move through parenthesis using the
   =C-M-b= to go up one level in parenthesis and =C-M-f= to go one level
   deeper. Notice that /M/ here represents the meta-key.

   (You (can check (at (it by playing with this ( following)))
   expression)).

** Splitting parenthesis

   For splitting a single parenthesis or quote into two different
   parenthesis use =M-S=. For instance (this is one) can be simply
   divided in (this) (is one).



