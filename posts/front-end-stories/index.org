#+BEGIN_COMMENT
.. title: Front-End Stories
.. slug: front-end-stories
.. date: 2022-01-24 11:30:21 UTC+01:00
.. tags: front-End
.. category: 
.. link: 
.. description: 
.. type: text

#+END_COMMENT

#+begin_export html
<style>
img {
display: block;
margin-top: 60px;
margin-bottom: 60px;
margin-left: auto;
margin-right: auto;
width: 70%;
height: 100%;
class: center;
}

.container {
  position: relative;
  left: 15%;
  margin-top: 60px;
  margin-bottom: 60px;
  width: 70%;
  overflow: hidden;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  display:block;
  overflow-y: hidden;
}

.responsive-iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
  display:block;
  overflow-y: hidden;
}
</style>


<style>
 {
  box-sizing: border-box;
  margin-top: 60px;
  margin-bottom: 60px;
}

.column {
  float: left;
  width: 50%;
  padding: 0px;
}

/* Clearfix (clear floats) */
.row::after {
  content: "";
  clear: both;
  display: table;
}
</style>

#+end_export

So again front-end is not my stuff and will never be.

I need to develop a basic understanding of front-end in order to not
depend on other people as sometimes in the app I will have to
understand some front-end, back-end interactions without always being
shielded by some kind of REST-API.

So this work contains some research/on the job discoveries / debugging
stuff related to the the front-end.

Logically it will be very basic content that is not as interesting for
the expert in the field. It is much more my search and rescue
repository as I am often constructing.

This is important as I am noting that often things are recurrent.

In general if you ever will want to dig more into a more narrow
topic check at [[https://frontendmasters.com/guides/front-end-handbook/2019/#4.10][the following]].

{{{TEASER_END}}}

** On the javascript interaction with html and CSS stuff

   So basically you are not alone in this universe. There are plenty
   of people that are just looking for a basics understanding of it as
   you are.

   Check [[https://stackoverflow.com/questions/38834375/relationship-between-html-and-javascript-the-basics-of-frontend-development][this url]] containing exactly the same understanding that you
   want to fix in your mind. (basically it follows the reply of the
   most voted answer next)

   So basically that is the idea:

   - your browser request a front-end page from the back-end server.

   - the server sends an HTML page which usually includes:

     - DOM, CSS and Javascript as tags.


   Note now that the DOM - is is a language-independent model made up
   of objects representing the structure of a document. You can then
   modify the structure of  the dome using that model. HMTL is just
   one among the many languages that the model can operate on.

   So understand that the HTML page contains all of the page, then by
   using javascript you can actually manipulate the DOM and embedd
   some dynamic logic such that you might display or not some
   elements. So basically that is a little bit the idea.

   More into the detail it works like this:

#+begin_export html
 <img src="../../images/Screenshot 2022-01-24 133817.png" class="center">
#+end_export

   1. Browser starts by reading the HTML to create what is known as a content tree.

   2. Then it "looks" at the CSS and "applies" the CSS to the content
      tree and creates what is called a render tree. This has the
      styling information added. 

   3. Finally it goes though layout process, where each of the HTML
      elements are assigned exact physical window coordinates to
      display at. 

   4. Finally everything is "painted" and you see the stylized HTML
      page. 

   5. JavaScript is parsed by the browser seprately as it is
      encountered in =<script>= tag. JavaScript can add/delete/modify
      existing components of the dom and change how CSS applies to
      them. It can also make new network calls. (that is basically the
      key point that you have to understand, as all of the other is
      pretty straightforward and just a bit of static content that is
      fetched via network - i.e. shipped by the server together with
      the different html pages you ship)

** Understanding front-end applications

   Note now that this is the basics, so that now you can basically
   understand basics issues with the front-end compoents.

   I.e when you try to understand front-end applications and need to
   debug them, first start by looking at the html 
   
       1. from there you should see the entire DOM. Everything that
          could eventually appear should be visible in there.

	  (The only think that I can think of is if you get some other
          html pages via javascript and ship and transform them in
          such a way. No idea how much that is a use case in front-end
          development. Can imagine that this might eventually be an
          option if you do not want to display much to the browser
          user...)

       2. then check for what you are looking for there. if you do not
          find it, then you have to strart dig into the dynamic
          components and check at the javascript scripts.

	  There will be either plain javascript in your html file or
          you will have special scripts that you will fetch from the
          server - such that you can search them in your workspace in
          there.

          Note that you might especially call some =show= or =hide=
          methods to implement the logic etc. 

    /Side note/ for my project. Note that you do not have many html
    files in your workspace. I.e. you might not see the specific html
    that you are seeing your browser in your workspace. I think that
    this is because of the mustache way of constructing them
    dynamically.

    Now that adds a little bit a layer of complexity as you need to
    understand how you compile files into html files with mustache
    etc. but that will come with time. Step by step - had already
    started to dig into this sense when making notes on the one
    project. Give it time but each time you write a post as this you
    are one step closer to a general understanding of the situation.

