#+BEGIN_COMMENT
.. title: Python and EIN on new Laptop
.. slug: python-and-ein-on-new-laptop
.. date: 2023-06-06 15:15:45 UTC+02:00
.. tags: Python, emacs
.. category: 
.. link: 
.. description: 
.. type: text

#+END_COMMENT


#+begin_export html
<style>

img {
display: block;
margin-top: 60px;
margin-bottom: 60px;
margin-left: auto;
margin-right: auto;
width: 70%;
height: 100%;
class: center;
}

.container {
  position: relative;
  left: 15%;
  margin-top: 60px;
  margin-bottom: 60px;
  width: 70%;
  overflow: hidden;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  display:block;
  overflow-y: hidden;
}

.responsive-iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
  display:block;
  overflow-y: hidden;
}
</style>
 #+end_export


Nothing for the public. 

This is a very personal post in order to understand how you work on
the new laptop. 

I have no time to dig deeper right now and fix the workflow. Have to
go with these shortcuts. 

{{{TEASER_END}}}


** Python

   I did not use the laptop I am working with now for a longer
   period. Turned out that the download of some libraries was not
   working smoothly anymore. 

   Something was not working anymore with the compiler. 

   Decided to install Python again. I canceled the older version of
   python I was working with before. 

   There was an issue though. 

   There was a python shipped with my Emacs. It is the first one that
   is read on the =PATH= as I did not want to mess up my emacs and
   potentially it requires that python given it is in its binaries, I
   decided to work in the following way.

   Create a new virtual-environment for each new project, which in any
   case is a good habit and strategy. 

   I do this by executing in the virtual environments folder:

   #+begin_src sh
   C:/Users/marco/AppData/Local/Programs/Python/Python311/python.exe -m venv nikolaEnv
   #+end_src

   Then I activate the specific virtualenvironment and download the
   relevant libraries there. I work then in the specific virtualenvironment.
   

** EIN

   With emacs Ipython notebooks I have as well issues at the moment. 

   There is a way around it. Work in such a way. Then go back to it if
   you need. 
   
   I.e. you get an error when starting the notebook server via the
   lisp method. 

   The solution is to start the server via a shell command. 

   #+begin_src sh
   c:/Users/marco/Desktop/python_venv/jupyterEnv/Scripts/jupyter.exe notebook --notebook-dir=c:/Users/marco/Desktop/EIN/ --no-browser
   #+end_src

   Then you can simply work in emacs by running the =ein:login=
   method. Then everything is working as usual. 

   You can execute the above with =ein:jupyter-server-start= and then
   executing =ein:login= next.

   Start the =.ipynb= in emacs case you are having issues connecting
   to it in org.

*** Images

    Images generated in emacs are not displaying correctly within it. 

    It might be an issue related to =imagemagick=. Always recall to
    install an emacs version that is compiled with it. 

    In any case you can work with the browser for the visualization of
    the images. 

    You can then save them where-ever you want and keep your org files
    neat.

    The session is shared such that the overhead is neglectable. 

    You could solve this by setting the following value to true:
    
    #+begin_export html
     <img src="../../images/Screenshot 2024-02-19 183028.png" class="center">
    #+end_export




