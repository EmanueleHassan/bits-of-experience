<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bits of Experience</title><link>https://marcohassan.github.io/bits-of-experience/</link><description>A readable view on my studying adventures.</description><atom:link href="https://marcohassan.github.io/bits-of-experience/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:marco.hassan30@gmail.com"&gt;Marco Hassan&lt;/a&gt; </copyright><lastBuildDate>Thu, 16 Apr 2020 13:28:26 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Embedding Watson Assistant into a Client Webpage</title><link>https://marcohassan.github.io/bits-of-experience/posts/embedding-watson-assistant-into-a-client-webpage/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;br&gt;

&lt;p&gt;
This demo introduce the necessary steps in order to create an
intelligent Watson Chatbot and deploy it in your/your client website.
&lt;/p&gt;

&lt;p&gt;
Please report any issues to marco.hassan@ibm.com
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/embedding-watson-assistant-into-a-client-webpage/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>IBM Work</category><guid>https://marcohassan.github.io/bits-of-experience/posts/embedding-watson-assistant-into-a-client-webpage/</guid><pubDate>Thu, 16 Apr 2020 12:47:05 GMT</pubDate></item><item><title>Nikola Set Up - Do it the Simple Way.</title><link>https://marcohassan.github.io/bits-of-experience/posts/nikola-set-up-do-it-the-simple-way/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
Nikola is a python package to automatically generate static
webpages. This is more secure than operating through dynamic websites
for non-expert users. Moreover the integration with org will allow you
to easily generate blogs based on your org documents and this will
prove to be especially useful given that you can work following your
literate programming workflow without bothering too much on the
format.
&lt;/p&gt;

&lt;p&gt;
You can finally generate and publish interesting discoveries in an
instantaneous way.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/nikola-set-up-do-it-the-simple-way/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>blogging</category><category>emacs</category><guid>https://marcohassan.github.io/bits-of-experience/posts/nikola-set-up-do-it-the-simple-way/</guid><pubDate>Sun, 12 Apr 2020 19:45:52 GMT</pubDate></item><item><title>WSGI, APACHE and NGINX</title><link>https://marcohassan.github.io/bits-of-experience/posts/wsgi-apache-and-nginx/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
This posts contain a brief overview of the deployment options for
Python applications. It will give a brief overview on the different
web servers types and the necessity for utilizing a WSGI server when
deploying a Python application.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/wsgi-apache-and-nginx/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://marcohassan.github.io/bits-of-experience/posts/wsgi-apache-and-nginx/</guid><pubDate>Tue, 31 Mar 2020 15:51:00 GMT</pubDate></item><item><title>UML Diagrams with PlantUML</title><link>https://marcohassan.github.io/bits-of-experience/posts/uml-diagrams-with-plantuml/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;br&gt;
&lt;br&gt;

&lt;p&gt;
For my first bigger project I had to construct a flow diagram
describing the architecture of a back-end model analytics model I am
working on. 
&lt;/p&gt;

&lt;p&gt;
This post briefly discuss on UML and gives the set-up of &lt;code&gt;Plantuml&lt;/code&gt; on
emacs. 
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/uml-diagrams-with-plantuml/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Architecture</category><category>emacs</category><guid>https://marcohassan.github.io/bits-of-experience/posts/uml-diagrams-with-plantuml/</guid><pubDate>Wed, 25 Mar 2020 10:14:12 GMT</pubDate></item><item><title>Accessing protected content via GET requests</title><link>https://marcohassan.github.io/bits-of-experience/posts/accessing-protected-content-via-get-requests/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;br&gt;
&lt;br&gt;

&lt;p&gt;
Sometimes when I want to make notes I prefer to download an html file,
transform it to an &lt;code&gt;.org&lt;/code&gt; file via &lt;code&gt;pandoc&lt;/code&gt; and to edit and make notes
in org mode. 
&lt;/p&gt;

&lt;p&gt;
Nonetheless if the technique works fine for non-protected HTML pages,
sometimes you are required to pass some authorization variables to
access a page. This post outline my solution to deal with the latter case.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/accessing-protected-content-via-get-requests/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>web</category><guid>https://marcohassan.github.io/bits-of-experience/posts/accessing-protected-content-via-get-requests/</guid><pubDate>Sat, 21 Mar 2020 07:34:45 GMT</pubDate></item><item><title>Useful Network debugging Tools</title><link>https://marcohassan.github.io/bits-of-experience/posts/useful-network-debugging-tools/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;br&gt;
&lt;br&gt;

&lt;p&gt;
There are many handy tools you can leverage when debugging your
network. This is a brief list with possible commands to keep the
performance of your network under track and to identify the piece of
the network it is failing; i.e. whether it is a DNS, WebServer, DHCP
error or whatever. 
&lt;/p&gt;

&lt;p&gt;
It moreover illustrates handy tools through which you can gain a
better understanding of internet protocols as you are able to open
individuals packages and frames at the different layers and observe
their payloads and headers.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/useful-network-debugging-tools/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://marcohassan.github.io/bits-of-experience/posts/useful-network-debugging-tools/</guid><pubDate>Sun, 15 Mar 2020 07:33:59 GMT</pubDate></item><item><title>Shell Scripts and Interactive Shell</title><link>https://marcohassan.github.io/bits-of-experience/posts/shell-scripts-and-interactive-shell/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
Today I came accross a nice way to write and append information to a
document. This is particularly useful when making tutorial and
writing instructions for folks that do work with emacs or any proper
text editor.
&lt;/p&gt;

&lt;p&gt;
Instead of working with &lt;code&gt;nano&lt;/code&gt; you can simply write multiple lines
directly in your shell leveraging the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; delimiter condition and
passing the input to a document of interest.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/shell-scripts-and-interactive-shell/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Unix</category><guid>https://marcohassan.github.io/bits-of-experience/posts/shell-scripts-and-interactive-shell/</guid><pubDate>Sat, 22 Feb 2020 08:45:37 GMT</pubDate></item><item><title>Nice Web 2.0 Formatted Technical Documents</title><link>https://marcohassan.github.io/bits-of-experience/posts/nice-web-20-formatted-technical-documents/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;br&gt;
&lt;br&gt;

&lt;p&gt;
The other day I randomly came across &lt;a href="https://www.youtube.com/watch?v=0g9BcZvQbXU&amp;amp;t=192s"&gt;this nice youtube video&lt;/a&gt;. It was a
suggestion of youtube, so probably it is starting to get to know me
too well.
&lt;/p&gt;

&lt;p&gt;
In any case the guy wrote a very nice &lt;code&gt;CSS&lt;/code&gt; styleguide for technical
documentation that you can use when creating some technical
documentation.
&lt;/p&gt;

&lt;p&gt;
You can then simply code in &lt;code&gt;orgmode&lt;/code&gt; and by specifying the location
of the guy &lt;code&gt;CSS&lt;/code&gt; style when exporting your org mode document into html
it will be nicely rendered and you will have then the opportunity to
nicely write your technical documentation.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/nice-web-20-formatted-technical-documents/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><guid>https://marcohassan.github.io/bits-of-experience/posts/nice-web-20-formatted-technical-documents/</guid><pubDate>Fri, 21 Feb 2020 17:53:28 GMT</pubDate></item><item><title>Python Virtual Environment and Ob-ipython Kernel Connession</title><link>https://marcohassan.github.io/bits-of-experience/posts/python-virtual-environment-and-ob-ipython-kernel-connession/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;br&gt;
&lt;br&gt;


&lt;p&gt;
This post briefly introduce the creation of a virtual environment and
the initiation of a kernel active on that virtual environment. 
&lt;/p&gt;

&lt;p&gt;
Finally it discusses how to connect to the kernel running given its
ports specifications.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/python-virtual-environment-and-ob-ipython-kernel-connession/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><guid>https://marcohassan.github.io/bits-of-experience/posts/python-virtual-environment-and-ob-ipython-kernel-connession/</guid><pubDate>Fri, 07 Feb 2020 10:18:48 GMT</pubDate></item><item><title>Openshift and Kubernetes Commands</title><link>https://marcohassan.github.io/bits-of-experience/posts/openshift-and-kubernetes-commands/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;br&gt;
&lt;br&gt;

&lt;p&gt;
This post outlines some of the commands to operate on your Kubernetes
and Openshift cluster via CLI.
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/openshift-and-kubernetes-commands/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Container Management</category><category>IT Architecture</category><guid>https://marcohassan.github.io/bits-of-experience/posts/openshift-and-kubernetes-commands/</guid><pubDate>Wed, 05 Feb 2020 12:26:21 GMT</pubDate></item></channel></rss>