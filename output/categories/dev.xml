<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bits of Experience (Posts about dev)</title><link>https://marcohassan.github.io/bits-of-experience/</link><description></description><atom:link href="https://marcohassan.github.io/bits-of-experience/categories/dev.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:marco.hassan30@gmail.com"&gt;Marco Hassan&lt;/a&gt; </copyright><lastBuildDate>Fri, 25 Feb 2022 13:42:51 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Java Debugging</title><link>https://marcohassan.github.io/bits-of-experience/posts/java-debugging/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;style&gt;
img {
display: block;
margin-top: 60px;
margin-bottom: 60px;
margin-left: auto;
margin-right: auto;
width: 70%;
height: 100%;
class: center;
}

.container {
  position: relative;
  left: 15%;
  margin-top: 60px;
  margin-bottom: 60px;
  width: 70%;
  overflow: hidden;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  display:block;
  overflow-y: hidden;
}

.responsive-iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
  display:block;
  overflow-y: hidden;
}
&lt;/style&gt;


&lt;p&gt;
So it is time to start some serious post and exploration on Java
debugging.
&lt;/p&gt;

&lt;p&gt;
Note that I believe that having the right tooling is paramount of
performing a job well. It can save you a lot of time that is worth.
&lt;/p&gt;

&lt;p&gt;
So this post will contain all of the concepts in order to properly
work with the debugger.
&lt;/p&gt;

&lt;p&gt;
Cause yeah… we all know about breakpoints… but you better start to
properly work with conditional breakpoints, trace-points, watchpoints,
time-reversion features etc.
&lt;/p&gt;

&lt;p&gt;
As always in the IT world, lots of heads worked on a thing, so you
start to dig and you will never end. You simply open a pandora box.
&lt;/p&gt;

&lt;p&gt;
I will start easy withe the basics and then I will start to dig a
little bit deeper into more advanced stuff.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/java-debugging/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>debugging</category><category>dev</category><category>java</category><category>software-engineering</category><guid>https://marcohassan.github.io/bits-of-experience/posts/java-debugging/</guid><pubDate>Sun, 12 Dec 2021 11:32:32 GMT</pubDate></item><item><title>On the Full-Cycle Development Model</title><link>https://marcohassan.github.io/bits-of-experience/posts/on-the-full-cycle-development-model/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;p&gt;
This is a brief reminder - &lt;a href="https://www.infoq.com/presentations/netflix-devops/"&gt;on being a full-cycle developer&lt;/a&gt; and the its
implications. 
&lt;/p&gt;</description><category>dev</category><guid>https://marcohassan.github.io/bits-of-experience/posts/on-the-full-cycle-development-model/</guid><pubDate>Fri, 22 Oct 2021 15:46:00 GMT</pubDate></item></channel></rss>