<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bits of Experience (Posts about REST)</title><link>https://marcohassan.github.io/bits-of-experience/</link><description></description><atom:link href="https://marcohassan.github.io/bits-of-experience/categories/rest.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:marco.hassan30@gmail.com"&gt;Marco Hassan&lt;/a&gt; </copyright><lastBuildDate>Fri, 01 Apr 2022 18:25:47 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Some Thoughts on Microservices</title><link>https://marcohassan.github.io/bits-of-experience/posts/some-thoughts-on-microservices/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
So this post is about the gist of an idea; an important idea.
&lt;/p&gt;

&lt;p&gt;
So basically at IBM you got all of that theoretical education about
how to properly structure application, code, distribute etc.
&lt;/p&gt;

&lt;p&gt;
The issue there was that by just working in the new way of doing
things you were sometimes missing and not realizing the benefit of
doing things as they were prescribed. And a bit of dark side, is
necessary to put things into context and imporve your style. There,
when working in your projects you mostly had a green field and you
directly started implementing things in cloud-native way. Programming
via microservices and exposing all of the logic via rest-APIs.
&lt;/p&gt;

&lt;p&gt;
Now working on a big code base with quite some legacy code you can
even better appreciate the new paradigm shift in IT.
&lt;/p&gt;

&lt;p&gt;
I argue in this post, that the benefit of working through
microservices is not simply at the level of deployment, scalability,
availability and all of these dimensions. In contrast, I argue that
one of the biggest benefit an individual has to price in is the
benefit the modular structure of the approach imposes on the
developer.
&lt;/p&gt;

&lt;p&gt;
That said it is all about trade-offs and such a migration costs
time. For a team acting under pressure like ours that is not that
trivial. The overhead of system-management will be there as well
outlined in &lt;a href="https://luminousmen.com/post/thoughts-on-microservices"&gt;such a post&lt;/a&gt;. Maybe step by step…, when you write a new
application for some complete new business logic start to decouple it.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/some-thoughts-on-microservices/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Microservices</category><category>REST</category><guid>https://marcohassan.github.io/bits-of-experience/posts/some-thoughts-on-microservices/</guid><pubDate>Tue, 12 Oct 2021 08:08:26 GMT</pubDate></item></channel></rss>