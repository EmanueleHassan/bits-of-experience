<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bits of Experience (Posts about Machine Learning)</title><link>https://marcohassan.github.io/bits-of-experience/</link><description></description><atom:link href="https://marcohassan.github.io/bits-of-experience/categories/machine-learning.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:marco.hassan30@gmail.com"&gt;Marco Hassan&lt;/a&gt; </copyright><lastBuildDate>Sat, 18 Sep 2021 14:12:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>A list of interesting Posts On ML techniques</title><link>https://marcohassan.github.io/bits-of-experience/posts/interesting-posts-on-ml/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;style&gt;
.container {
  position: relative;
  left: 15%;
  margin-top: 60px;
  margin-bottom: 60px;
  width: 70%;
  overflow: hidden;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  display:block;
  overflow-y: hidden;
}

.responsive-iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
  display:block;
  overflow-y: hidden;
}
&lt;/style&gt;


&lt;p&gt;
This is a list of good material I found on various ML techniques. Some
you might want to explore them deeper in later posts. Some will just
stay as they are here.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/interesting-posts-on-ml/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Machine Learning</category><guid>https://marcohassan.github.io/bits-of-experience/posts/interesting-posts-on-ml/</guid><pubDate>Tue, 21 Jul 2020 19:40:24 GMT</pubDate></item><item><title>Python Pipelines</title><link>https://marcohassan.github.io/bits-of-experience/posts/python-pipelines/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;br&gt;

&lt;p&gt;
Pipelines are important when working on ML projects in python. They
first appeared through the implementation of ML tasks sklearn. There
the design setting of the maintainer of the library was to design a
set of APIs through which to govern the entire ML process. The three
major class of APIs are &lt;code&gt;tranformers&lt;/code&gt;, i.e. transformations to the
feature and dependent variables, &lt;code&gt;estimators&lt;/code&gt;, i.e. the ML model that
you fit on your transformed features matrix, and finally &lt;code&gt;predictors&lt;/code&gt;,
i.e. the API method used for predicting your desired variable based on
your fitted estimator.
&lt;/p&gt;

&lt;p&gt;
The above logic became so widespread that further important
libraries - such as the spark ML modules for using ML models
leveraging the spark engine for distributed computation - decided to
keep the same design setting and keep the above API structure.
&lt;/p&gt;

&lt;p&gt;
This posts aims at keeping an overview of some important transformers,
estimators and predictors as well as to set up the general framework
to combine the three together in easy to use Pipelines. 
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/python-pipelines/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Machine Learning</category><category>Python</category><guid>https://marcohassan.github.io/bits-of-experience/posts/python-pipelines/</guid><pubDate>Thu, 02 Jul 2020 10:44:32 GMT</pubDate></item><item><title>When creating a home-made ML model</title><link>https://marcohassan.github.io/bits-of-experience/posts/when-creating-a-home_made-ml-model/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;div&gt;&lt;p&gt;
In this post I go over some beginner mistake and set up the workflow for
further works that involve some custom-created ML model.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marcohassan.github.io/bits-of-experience/posts/when-creating-a-home_made-ml-model/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Machine Learning</category><category>Python</category><category>Sklearn</category><guid>https://marcohassan.github.io/bits-of-experience/posts/when-creating-a-home_made-ml-model/</guid><pubDate>Wed, 22 Apr 2020 13:34:50 GMT</pubDate></item></channel></rss>