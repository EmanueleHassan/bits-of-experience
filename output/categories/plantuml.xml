<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bits of Experience (Posts about plantuml)</title><link>https://emanuelehassan.github.io/bits-of-experience/</link><description></description><atom:link href="https://emanuelehassan.github.io/bits-of-experience/categories/plantuml.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:marco.hassan30@gmail.com"&gt;Marco Hassan&lt;/a&gt; </copyright><lastBuildDate>Fri, 26 Jan 2024 11:12:44 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Some Notes about UML and PlantUml</title><link>https://emanuelehassan.github.io/bits-of-experience/posts/some-notes-about-uml-and-plantuml/</link><dc:creator>Marco Hassan</dc:creator><description>&lt;p&gt;
I already posted about the set-up of plantuml &lt;a href="https://marcohassan.github.io/bits-of-experience/posts/uml-diagrams-with-plantuml/"&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
This is a very hand tool to manage complexity. In my new position
complexity is all around and over me.
&lt;/p&gt;

&lt;p&gt;
The system is big and you need to keep cold blood, strucutre and
overview. I think this will be the main challange. In this sense the
best way for me to operate will be to create good technical
documentation of the system that I can always refer to.
&lt;/p&gt;

&lt;p&gt;
Emacs is a very good friend in this sense. With all of the tags and
&lt;code&gt;TODO&lt;/code&gt;, &lt;code&gt;ISSUES&lt;/code&gt; workflow it will be possible for me to store the
general structure of the system and to keep a log and search across it
in order to manage such huge complexity.
&lt;/p&gt;

&lt;p&gt;
Such tagged documentation in combination with the possibility to
export my notes in very readable &lt;code&gt;html&lt;/code&gt; documents and the possibility
to write architectural diagrams via &lt;code&gt;plantuml&lt;/code&gt; will be my big ally in
this in new challenge.
&lt;/p&gt;

&lt;p&gt;
You can then store such &lt;code&gt;html&lt;/code&gt; in blob stores and make them available
across the team.
&lt;/p&gt;

&lt;p&gt;
Here some notes on resources you can refere to when writing your
architectural diagrams and general documentation for your projects.
&lt;/p&gt;

&lt;p&gt;
Find the official documentation &lt;a href="http://plantuml.com/en/guide"&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://emanuelehassan.github.io/bits-of-experience/posts/some-notes-about-uml-and-plantuml/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;</description><category>emacs</category><category>IT Architecture</category><category>plantuml</category><category>uml</category><guid>https://emanuelehassan.github.io/bits-of-experience/posts/some-notes-about-uml-and-plantuml/</guid><pubDate>Fri, 01 Oct 2021 09:47:41 GMT</pubDate></item></channel></rss>