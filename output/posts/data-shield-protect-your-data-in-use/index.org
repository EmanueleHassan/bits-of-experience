#+BEGIN_COMMENT
.. title: Data Shield - Protect Your Data in Use
.. slug: data-shield-protect-your-data-in-use
.. date: 2020-06-08 15:31:06 UTC+02:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
.. status: private
#+END_COMMENT


#+BEGIN_EXPORT html
<br>
<br>
#+END_EXPORT


Working in the IT field you might often hear about the concept of
data encryption at REST and data encryption in transit. What about the
third component - data encryption in use? 

IBM has partnered with Intel to encrypt data in use through Intel SGX
enabled CPUs that will allow to encrypt data in memory used by the
application such that not even a privileged user might see the data
plain text while the application is running.

This posts does not go through the details of the frontanix runtime
encryption behind DataShield but rather goes through the necessary
steps to create a SGX enabled kubernetes or openshift cluster and how
to secure data encryption in use for containers deployed there.

#+BEGIN_EXPORT html
<br>
#+END_EXPORT

{{{TEASER_END}}}

* A very quick and dirty intro to better understand DataShield

#+BEGIN_EXPORT html
<br>
<br>
#+END_EXPORT


 #+begin_export html
 <iframe width="800" height="400"
 src="https://cdnapisec.kaltura.com/html5/html5lib/v2.82.5/mwEmbedFrame.php/p/1773841/uiconf_id/44837961/entry_id/0_qy62q1zo?wid=_1773841&iframeembed=true&playerId=kplayer&entry_id=0_qy62q1zo&flashvars[streamerType]=auto">
 </iframe>
 #+end_export

#+BEGIN_EXPORT html
<br>
<br>
#+END_EXPORT


* Necessary Dependencies
:properties:
:headers-args:sh: :exports both
:end:

** Configure your K8s or Openshift Cluster

 First and foremost it is important to underlying that the above
 mentioned technology does not work on standard hardware, when setting
 up your kubernetes/openshift cluster you should therefore select SGX
 enabled hardware. For instance for this demo I created an openshift
 cluster on IBM public cloud - the only cloud where you might easily
 deploy openshift clusters through a simply to use GUI - with
 =mb3c.4x32= bare metal servers.

#+BEGIN_EXPORT html
<br>
<br>
#+END_EXPORT

 #+begin_export html
  <img width="100%" height="100%" src="../../images/Bildschirmfoto_2020-06-08_um_15.55.17.png" class="center">
 #+end_export

#+BEGIN_EXPORT html
<br>
<br>
#+END_EXPORT

 You should then select the region where to deploy your cluster as well
 as the number of worker nodes you need for it.

 The provision of the cluster might take some time. You will receive an
 e-mail once it is done.

** Install the necessary Software CLIs

  Install the /[[https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started][IBM CLI]]/

  #+BEGIN_SRC sh
  curl -sL https://ibm.biz/idt-installer | bash
  #+END_SRC

  The above will install IBMCloud together with a couple of CLI useful for every developer. 
  In particular it will install:

  #+BEGIN_EXAMPLE
  - Homebrew (Mac only)
  - Git
  - Docker
  - Helm
  - kubectl
  - curl (Linuxâ„¢ only)
  - IBM Cloud Developer Tools plug-in
  - IBM Cloud Functions plug-in
  - IBM Cloud Object Storage plug-in
  - IBM Cloud Container Registry plug-in
  - IBM Cloud Kubernetes Service plug-in
  #+END_EXAMPLE

  Another option will be the one of installing the necessary tools:

  - IBM Cloud
  - Kubernetes
  - Docker
  - Helm
  - Kubernetes Service (ibmcloud plugin)
  - Container Registry (ibmcloud plugin)

  individually.

  A good place to get started in this sense is to login in the IBM cloud via CLI through 

  #+BEGIN_SRC sh
  ibmcloud login [-a API_ENDPOINT] [--sso] [-u USERNAME] [-p PASSWORD] [--apikey KEY | @KEY_FILE] [--no-iam] [-c (ACCOUNT_ID | ACCOUNT_OWNER_USER_ID) | --no-account] [-g (RESOURCE_GROUP_NAME | RESOURCE_GROUP_ID)] [-r REGION | --no-region] [-o ORG] [-s SPACE]
  #+END_SRC

  and look at the available /plug-ins/, the installed ones and the /available updates/:

  #+BEGIN_SRC sh
  ibmcloud plugin repo-plugins -r "IBM Cloud"
  #+END_SRC

  You can then install ibmcloud plugins through 

  #+BEGIN_SRC sh
  ibmcloud plugin install container-registry

  ibmcloud plugin install kubernetes-service
  #+END_SRC

  moreover, you can install the necessary [[https://kubernetes.io/docs/tasks/tools/install-kubectl/][Kubernetes]] and [[https://helm.sh/docs/intro/][Helm]]
  CLI from commands easily available over the internet. 

  I chose the latter version and for this demo I use the following
  configuration

  #+BEGIN_SRC sh
  kubectl version 
  #+END_SRC

  #+RESULTS:
  #+begin_example
  | 1 |  14 | v1.14.6 | 96fac5cd13a5dc064f7d9f4f23030a6aeface6cc | clean | 2019-08-19T11:13:49Z | go1.12.9  | gc | darwin/amd64 |
  | 1 | 16+ | v1.16.2 | a3ec9df                                  | clean | 2020-05-04T12:54:43Z | go1.12.12 | gc | linux/amd64  |
  #+end_example

  #+BEGIN_SRC sh
  helm version
  #+END_SRC

  #+RESULTS:
  #+begin_example
  | v3.1.2 | d878d4d45863e42fd5cff6743294a11d28a9abce | clean | go1.13.8 |
  #+end_example

  If you are using openshift you might even work through the oc CLI.

  #+BEGIN_SRC sh
  ibmcloud plugin install oc
  #+END_SRC

  This works essentially as an analogous of the kubernetes CLI for
  your openshift cluster. Given the fact that openshift actually
  builds on kubernetes these are essentially one and the same thing
  and the commands are pretty much similar.

** Connect to your openshift cluster through the kubernetes CLI

   Now that your cluster is up and running and the necessary software
   was installed on your local machine you should connect to the oc
   cluster via the CLI so that you can directly operate on your
   cluster through it.

   The most intuitive way to do that is by following the instructions
   on the IBM cloud as in the following video:

   *TODO - insert video*

   *TODO - for kubernetes go on zugriff an copy the command ibmcloud
   ks cluster config --cluster brjn8bff0sum0quk1fg0*

   After that when looking at your =.kube= file configuration
   responsible for your kubectl CLI you will observe the new entry:

   #+BEGIN_SRC sh
   kubectl config current-context
   #+END_SRC

   #+RESULTS:
   #+begin_example
   default/c100-e-eu-de-containers-cloud-ibm-com:32644/IAM#marco.hassan@ibm.com
   #+end_example

   Notice the 1:1 relation between the kubernetes CLI and the
   openshift one mentioned before.

   #+BEGIN_SRC sh
   oc config current-context
   #+END_SRC

   #+begin_example
   default/c100-e-eu-de-containers-cloud-ibm-com:32644/IAM#marco.hassan@ibm.com
   #+end_example

   If you open the configuration file you will get even more info for
   such context. Important for us is that you are acting on the
   cluster of interest and not on local kubernetes clusters or any
   other cluster.

** Set up the IAM access management credentials in order to convert your container images to run with encryption

   In order to encrypt your data in use in your container you will
   need to convert standard deployed containers on your cluster
   through Enclave. In order to do so you have to create a IAM access
   to act on the deployed containers on your cluster. 

- Create a service ID and a service ID API key for the IBM Cloud Data
  Shield container converter.

   #+BEGIN_SRC sh
   ibmcloud iam service-id-create data-shield-container-converter -d 'IBM Cloud Data Shield Container Converter'
   #+END_SRC

   #+Results:
   #+begin_example
   Creating service ID data-shield-container-converter bound to current account as Marco.Hassan@ibm.com...
   OK
   Service ID data-shield-container-converter is created successfully

   ID            ServiceId-79a2a96a-cb0c-4da4-8429-bb5108dae42c   
   Name          data-shield-container-converter   
   Description   IBM Cloud Data Shield Container Converter   
   CRN           crn:v1:bluemix:public:iam-identity::a/75c4c4ebbaff40a3935f069bfcec65a9::serviceid:ServiceId-79a2a96a-cb0c-4da4-8429-bb5108dae42c   
   Version       1-c194bf59aff281ccc9b483ed1e24bec5   
   Locked        false   
   #+end_example

- Create an API key for the container converter.

  #+BEGIN_SRC sh
  ibmcloud iam service-api-key-create 'IBM Cloud Data Shield Container Converter' data-shield-container-converter
  #+END_SRC

  #+results: 

  #+begin_example
  Service ID API key IBM Cloud Data Shield Container Converter is created

  Please preserve the API key! It cannot be retrieved after it's created.

  ID            ApiKey-cae324e7-168c-42bd-bfdf-447c3068e785   
  Name          IBM Cloud Data Shield Container Converter   
  Description      
  Created At    2020-06-09T07:55+0000   
  API Key       MRre2FumhbjPpN_8YJns3E5rifdfDWDy0lzLZ9X3DiJq   
  Locked        false   
  #+end_example

- Grant the service ID permission to access your container registry.

  #+BEGIN_SRC sh
  ibmcloud iam service-policy-create data-shield-container-converter --roles Reader,Writer --service-name container-registry
  #+END_SRC

  #+results: 
  #+begin_example
  OK
  Service policy is successfully created


  Policy ID:   8f143c58-9c5a-46d4-aaee-7041338f3f4d   
  Version:     1-ebef6db03e38492b330edd02f512ef7a   
  Roles:       Reader, Writer   
  Resources:                        
	       Service Name   container-registry      
  #+end_example

- Create a Kubernetes secret to be used for future conversions. If you
  don't have openssl, you can use any command-line base64 encoder with
  appropriate options. Be sure that there are not new lines in the
  middle or at the end of the encoded string.

  #+BEGIN_SRC sh
  # (echo -n '{"auths":{"<region>.icr.io":{"auth":"'; echo -n 'iamapikey:<api key>' | openssl base64 -A;  echo '"}}}') \
  #     | kubectl create secret generic converter-docker-config --from-file=.dockerconfigjson=/dev/stdin

  (echo -n '{"auths":{"<region>.icr.io":{"auth":"'; echo -n 'iamapikey:MRre2FumhbjPpN_8YJns3E5rifdfDWDy0lzLZ9X3DiJq' | openssl base64 -A;  echo '"}}}') \
      | kubectl create secret generic converter-docker-config --from-file=.dockerconfigjson=/dev/stdin

  #+END_SRC

  #+results: 
  #+begin_example
  > secret/converter-docker-config created
  #+end_example
   
** Install the Certificate Manager Chart on your Cluster

   The next step necessary to encrypt your data in use on your
   clusters is to install the certificate manager chart so that you
   might use it as your certificate authority to issue the digital
   certificates needed for the =TLS= communication between the IBM
   cloud and the Data Shield services through which to encrypt your
   data in use.

   Working with helm3 you can add the IBM created charts to your helm
   client 

   #+BEGIN_SRC sh
   helm repo add iks-charts https://icr.io/helm/iks-charts
   #+END_SRC

   #+RESULTS:
   : iks-charts has been added to your repositories

   Moreover you will need to add the jetstack charts.

   #+BEGIN_SRC sh
   helm repo add jetstack https://charts.jetstack.io
   #+END_SRC

   #+RESULTS:
   : jetstack has been added to your repositories

   You are then ready to add the cert-manager chart with the necessary
   containers issuing digital certificates through

   #+BEGIN_SRC sh
   kubectl apply --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/v0.10.1/deploy/manifests/00-crds.yaml
   #+END_SRC

   #+results:  
   #+begin_example
   customresourcedefinition.apiextensions.k8s.io/certificaterequests.certmanager.k8s.io configured
   customresourcedefinition.apiextensions.k8s.io/certificates.certmanager.k8s.io configured
   customresourcedefinition.apiextensions.k8s.io/challenges.certmanager.k8s.io configured
   customresourcedefinition.apiextensions.k8s.io/clusterissuers.certmanager.k8s.io configured
   customresourcedefinition.apiextensions.k8s.io/issuers.certmanager.k8s.io configured
   customresourcedefinition.apiextensions.k8s.io/orders.certmanager.k8s.io configured
   #+end_example


   Create a namespace on your cluster where to deploy your
   cert-manager chart and run your containers.

   #+BEGIN_SRC sh
   kubectl create namespace my-cert-manager
   #+END_SRC

   #+RESULTS:
   : namespace/my-cert-manager created

   #+BEGIN_SRC sh
   kubectl label namespace my-cert-manager certmanager.k8s.io/disable-validation=true
   #+END_SRC

   #+RESULTS:
   : namespace/my-cert-manager labeled

   #+BEGIN_SRC sh
   helm repo update && helm install my-cert-manager jetstack/cert-manager \
   --namespace my-cert-manager --version v0.10.1 \
   --set extraArgs[0]="--enable-certificate-owner-ref=true" \ 
   --set webhook.enabled=falsewebhook.enabled=false
   #+END_SRC

   #+RESULTS:

   #+results: 
   #+begin_example
   Hang tight while we grab the latest from your chart repositories...
   ...Successfully got an update from the "jetstack" chart repository
   ...Successfully got an update from the "incubator" chart repository
   ...Successfully got an update from the "iks-charts" chart repository
   ...Successfully got an update from the "stable" chart repository
   Update Complete. âŽˆ Happy Helming!âŽˆ 
   NAME: my-cert-manager
   LAST DEPLOYED: Tue Jun  9 10:25:10 2020
   NAMESPACE: my-cert-manager
   STATUS: deployed
   REVISION: 1
   TEST SUITE: None
   NOTES:
   cert-manager has been deployed successfully!

   In order to begin issuing certificates, you will need to set up a ClusterIssuer
   or Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).

   More information on the different types of issuers and how to configure them
   can be found in our documentation:

   https://docs.cert-manager.io/en/latest/reference/issuers.html

   For information on how to configure cert-manager to automatically provision
   Certificates for Ingress resources, take a look at the `ingress-shim`
   documentation:

   https://docs.cert-manager.io/en/latest/reference/ingress-shim.html
   #+end_example

** Install the DataShield Service

   Now that you've installed the prerequisites and created and configured
   your secrets, you're ready to install the service. You can use the
   provided Helm chart to install IBM Cloud Data Shield on your
   SGX-enabled bare metal cluster.

   The Helm chart installs the following components:

     - The supporting software for SGX.

     - The IBM Cloud Data Shield Enclave Manager.

     - The container conversion service, which allows containerized
       applications to run in the IBM Cloud Data Shield 

   In order to do that get the your cluster specific information

   #+BEGIN_SRC sh
   ibmcloud ks cluster ls
   #+END_SRC

   #+RESULTS:
   | OK               |                      |        |         |         |          |         |           |                       |         |          |
   | Name             | ID                   | State  | Created | Workers | Location | Version | Resource  | Group                 | Name    | Provider |
   | data_shield_test | bqo1o31f0ntv0h49bo2g | normal |       1 | month   | ago      |       1 | Frankfurt | 4.3.19_1523_openshift | Default | classic  |

   #+BEGIN_SRC sh
   ibmcloud cs cluster get --cluster bqo1o31f0ntv0h49bo2g
   #+END_SRC

   #+RESULTS:
   | Retrieving    | cluster                  | bqo1o31f0ntv0h49bo2g...                                                               |                                  |                                                     |      |
   | OK            |                          |                                                                                       |                                  |                                                     |      |
   | Name:         | data_shield_test         |                                                                                       |                                  |                                                     |      |
   | ID:           | bqo1o31f0ntv0h49bo2g     |                                                                                       |                                  |                                                     |      |
   | State:        | normal                   |                                                                                       |                                  |                                                     |      |
   | Created:      | 2020-05-04T13:43:40+0000 |                                                                                       |                                  |                                                     |      |
   | Location:     | fra02                    |                                                                                       |                                  |                                                     |      |
   | Master        | URL:                     | https://c100-e.eu-de.containers.cloud.ibm.com:32644                                   |                                  |                                                     |      |
   | Public        | Service                  | Endpoint                                                                              | URL:                             | https://c100-e.eu-de.containers.cloud.ibm.com:32644 |      |
   | Private       | Service                  | Endpoint                                                                              | URL:                             | -                                                   |      |
   | Master        | Location:                | Frankfurt                                                                             |                                  |                                                     |      |
   | Master        | Status:                  | Ready                                                                                 | (1                               | week                                                | ago) |
   | Master        | State:                   | deployed                                                                              |                                  |                                                     |      |
   | Master        | Health:                  | normal                                                                                |                                  |                                                     |      |
   | Ingress       | Subdomain:               | datashieldtest-f9bf7c7800de9856ddeffe14aad922a5-0000.eu-de.containers.appdomain.cloud |                                  |                                                     |      |
   | Ingress       | Secret:                  | datashieldtest-f9bf7c7800de9856ddeffe14aad922a5-0000                                  |                                  |                                                     |      |
   | Workers:      | 1                        |                                                                                       |                                  |                                                     |      |
   | Worker        | Zones:                   | fra02                                                                                 |                                  |                                                     |      |
   | Version:      | 4.3.19_1523_openshift    |                                                                                       |                                  |                                                     |      |
   | Creator:      | -                        |                                                                                       |                                  |                                                     |      |
   | Monitoring    | Dashboard:               | -                                                                                     |                                  |                                                     |      |
   | Resource      | Group                    | ID:                                                                                   | f274228d8aa542fb8d3d120e7215071d |                                                     |      |
   | Resource      | Group                    | Name:                                                                                 | Default                          |                                                     |      |
   | Addons        |                          |                                                                                       |                                  |                                                     |      |
   | Name          | Enabled                  |                                                                                       |                                  |                                                     |      |
   | kube-terminal | true                     |                                                                                       |                                  |                                                     |      |


   As well as your ibmcloud id

   #+BEGIN_SRC sh
   bx target
   #+END_SRC

   #+results: 
   #+begin_example
   API endpoint:      https://cloud.ibm.com   
   Region:            eu-de   
   User:              ....
   Account:           IBM (HERE THERE WILL BE YOUR Account ID) 
   ....
   #+end_example

   Based on that you can copy the information in the following helm
   command creating the necessary containers to encrypt your data

   #+BEGIN_SRC sh
   helm install mydatashield iks-charts/ibmcloud-data-shield \
   --set enclaveos-chart.Manager.AdminEmail= <your Mail registerd with IBM cloud> \
   --set enclaveos-chart.Manager.AdminName=Marco Hassan \
   --set enclaveos-chart.Manager.AdminIBMAccountId= <Account-ID> 
   --set global.IngressDomain=datashieldtest-f9bf7c7800de9856ddeffe14aad922a5-0000 
   --set converter-chart.Converter.DockerConfigSecret=converter-docker-config
   --set global.OpenShiftEnabled=true
   #+END_SRC


  #+BEGIN_SRC sh
  NAME: mydatashield        
  LAST DEPLOYED: Mon May 25 18:16:42 2020
  NAMESPACE: default
  STATUS: deployed
  REVISION: 1
  TEST SUITE: None
  NOTES:
  Thank you for installing ibmcloud-data-shield.

  Your release is named mydatashield.

  To learn more about the release, try:

    $ helm status mydatashield
    $ helm get mydatashield

  You can access the Enclave Manager web console at https://enclave-manager.datashieldtest-f9bf7c7800de9856ddeffe14aad922a5-0000

  Documentation may be found at https://console.bluemix.net/docs/services/data-shield/index.html
  #+END_SRC

  #+begin_src sh
  helm install mydatashield iks-charts/ibmcloud-data-shield --set enclaveos-chart.Manager.AdminEmail=Marco.Hassan@ibm.com --set enclaveos-chart.Manager.AdminName=Marco.Hassan@ibm.com --set enclaveos-chart.Manager.AdminIBMAccountId=75c4c4ebbaff40a3935f069bfcec65a9 --set global.IngressDomain=kubernetes-data-shield-f9bf7c7800de9856ddeffe14aad922a5-0000 --set converter-chart.Converter.DockerConfigSecret=converter-docker-config
  #+end_src




  When looking in your cloud GUI you should then be able to see the
  datashield service up and running.

#+BEGIN_EXPORT html
<br>
<br>
#+END_EXPORT

  #+begin_export html
   <img width="100%" height="100%" src="../../images/Bildschirmfoto_2020-06-09_um_10.47.06.png" class="center">
  #+end_export
